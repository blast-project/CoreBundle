FROM debian:stable
# https://issues.jenkins-ci.org/browse/JENKINS-44609
# https://issues.jenkins-ci.org/browse/JENKINS-31507
#as phpcli_for_platform

RUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https lsb-release ca-certificates net-tools lsof postgresql-client wget \
    && apt-get install --no-install-recommends -y git curl build-essential unzip python-pip python-setuptools \
    && apt-get install --no-install-recommends -y default-jre-headless xvfb dnsutils vim-nox\
    && apt-get autoremove -y && apt-get clean

RUN echo "deb http://http.debian.net/debian unstable main" > /etc/apt/sources.list.d/firefox.list && apt-get update && apt-get install --no-install-recommends -y firefox\
    && apt-get autoremove -y && apt-get clean

# for full only && default-jre-headless xvfb firefox-esr dnsutils vim

ARG PHPVER=7.1
RUN echo "deb http://ftp.debian.org/debian $(lsb_release -sc)-backports main" >> /etc/apt/sources.list \
    && apt-get update \
    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list \
    && apt-get update \
    && apt-get install --no-install-recommends -y php${PHPVER} php${PHPVER}-cli php${PHPVER}-pgsql php${PHPVER}-mysql php${PHPVER}-curl php${PHPVER}-json php${PHPVER}-gd php${PHPVER}-mcrypt php${PHPVER}-intl php${PHPVER}-sqlite3 php${PHPVER}-gmp php${PHPVER}-geoip php${PHPVER}-mbstring php${PHPVER}-redis php${PHPVER}-xml php${PHPVER}-zip php${PHPVER}-xdebug \
    && apt-get install --no-install-recommends -y php${PHPVER}-xdebug \
    && apt-get autoremove -y && apt-get clean

RUN echo "phar.readonly = Off" >> /etc/php/${PHPVER}/cli/conf.d/42-phar-readonly.ini \
    && echo "memory_limit=-1" >> /etc/php/${PHPVER}/cli/conf.d/42-memory-limit.ini \
    && echo "date.timezone=Europe/Paris" >>  /etc/php/${PHPVER}/cli/conf.d/68-date-timezone.ini

RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer \
    && chmod 755 /usr/local/bin/composer

ENV HOME=/home/jenkins
ENV USER=jenkins
ENV GROUP=users

# -u $(id -u)
# because jenkins docker pipeline force a -u option on run
# https://github.com/jenkinsci/docker-workflow-plugin/pull/25/files
# see whoAmI function here:
# https://github.com/ndeloof/docker-workflow-plugin/blob/master/src/main/java/org/jenkinsci/plugins/docker/workflow/client/DockerClient.java
# it should be fixed in next plugins version >= 1.14
# jenkins user on sandboxrd has the 1004 id and it is forced by pipeline plugin on docker log on

# --no-create-home
# if we don't want skeleton file so we create home by hand (or by RUN :) )
# RUN mkdir -p $HOME \ && mkdir -p $HOME/bin \ && chown -R $USER:$GROUP $HOME

ARG UID=1004
RUN useradd -d $HOME -g $GROUP -u ${UID} -m $USER \
    && mkdir -p $HOME/bin \
    && chown -R $USER:$GROUP $HOME

USER $USER:$GROUP
WORKDIR $HOME

ENV GOROOT=/usr/local/go
ENV GOPATH=$HOME/go
#should not be good, where does the current $PATH came from ?
ENV PATH=$PATH:/usr/local/go/bin:$HOME/go/bin:$HOME/bin:$HOME/.local/bin/


RUN pip install --upgrade pip

# Add some before install step to run test faster
RUN composer self-update --no-ansi --no-progress --stable \
    && composer global config bin-dir ${HOME}/bin  --no-ansi\
    && for i in "hirak/prestissimo" "sllh/composer-lint" "pdepend/pdepend" "squizlabs/php_codesniffer" "phploc/phploc" "phpmd/phpmd" "sebastian/phpcpd" "theseer/phpdox" "phpmetrics/phpmetrics"; do composer global require $i:@stable --prefer-dist --no-interaction --no-ansi; done \
    && composer clear-cache --no-ansi

ENV NVM_DIR="$HOME/.nvm"
RUN curl -so- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \
    && [ -s "$NVM_DIR/nvm.sh" ] \
    && . "$NVM_DIR/nvm.sh" \
    && nvm install 8.9 \
    && npm config set color false -g \
    && nvm clear-cache \
    && npm cache clean --force
